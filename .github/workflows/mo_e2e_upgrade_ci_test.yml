name: MO e2e upgrade CI Test

on:
  workflow_dispatch:

env:
  release: v1.1.0
  oldrelease: v1.0.2

jobs:
  upgrade-release-linux-x86:
    runs-on: ubuntu-latest
    name: Compatibility Test on Linux/x64(LAUNCH)
    timeout-minutes: 90

    steps:
      - name: checkout head
        uses: actions/checkout@v3
        with:
          fetch-depth: '3'
          path: ./head
          repository: matrixorigin/matrixone
          ref: main

      - name: checkout release ${{ env.release }}
        uses: actions/checkout@v3
        with:
          fetch-depth: '3'
          path: ./release
          repository: matrixorigin/matrixone
          ref: ${{ env.release }}

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne for head
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make build
          git rev-parse --short HEAD          
      - name: Build MatrixOne for ${{ env.release }}
        run: |
          cd $GITHUB_WORKSPACE/release && make clean && make build          
          git rev-parse --short HEAD
      - name: Create path for execution
        run: |
          cd $GITHUB_WORKSPACE && mkdir workspace 
      # - name: Start the Latest Version of ${{ env.release }} of MO
      #   run: |
      #     cd $GITHUB_WORKSPACE/workspace
      #     mv $GITHUB_WORKSPACE/release/etc .
      #     mv $GITHUB_WORKSPACE/release/mo-service .
      #     mv $GITHUB_WORKSPACE/release/optools .
          
      #     # Explicitly declare pessimistic mode
      #     echo "==============cn configuration of upstram=============="
      #     echo ""  >> ./etc/launch/cn.toml
      #     echo '[cn.txn]' >> ./etc/launch/cn.toml
      #     echo 'mode = "Pessimistic"' >> ./etc/launch/cn.toml
      #     echo "==============dn configuration of upstram=============="
      #     echo ""  >> ./etc/launch/tn.toml
      #     echo '[dn.txn]' >> ./etc/launch/tn.toml
      #     echo 'mode = "Pessimistic"' >> ./etc/launch/tn.toml
      #     cat ./etc/launch/tn.toml     
      #     ./optools/run_bvt.sh $GITHUB_WORKSPACE/workspace launch
      - name: Clone test-tool repository
        uses: actions/checkout@v3
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      # - name: Start BVT Test for MO with the Latest Version of ${{ env.release }}
      #   id: bvt_on_latest_release_version
      #   run: |
      #     export LC_ALL="C.UTF-8"
      #     locale
      #     cd $GITHUB_WORKSPACE/mo-tester
      #     sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
      #     cat mo.yml
      #     echo "============================="
      #     ./run.sh -n -g -o -p $GITHUB_WORKSPACE/release/test/distributed/cases -e optimistic 2>&1
      # - name: Dump mo-service goroutines
      #   if: ${{ always() && !cancelled() }}
      #   run: |
      #     max_retry=5
      #     retry=0
      #     while [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; do
      #       curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/workspace/release-dump-stacks${retry}.log
      #       pkill -9 mo-service
      #       retry=$((retry+1))
      #       if [ ${retry} -ge ${max_retry} ]; then
      #         echo 'after retry, still cannot shutdown mo-service'
      #         exit 1
      #       fi
      #       sleep 2
      #     done
      - name: Start the Version of Head of MO
        run: |
          cd $GITHUB_WORKSPACE/workspace
          mv mo-service mo-service-release
          mv mo-service.log release-mo-service.log
          rm -rf mo-data/etl
          rm -rf etc
          rm -rf optools
          # delete for clear the start finish status of mo
          rm -rf mo-data/local/system_init_completed
          mv $GITHUB_WORKSPACE/head/etc .
          mv $GITHUB_WORKSPACE/head/optools .
          mv $GITHUB_WORKSPACE/head/mo-service .
          echo "==============cn configuration of upstram=============="
          cat ./etc/launch/cn.toml
          echo "==============tn configuration of upstram=============="
          if [[ -f ./etc/launch/dn.toml ]]; then
            cat ./etc/launch/dn.toml     
          else 
            cat ./etc/launch/tn.toml     
          fi
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/workspace launch
      - name: Start BVT Test for MO with Version of Head
        id: bvt_on_latest_head_version
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/mo-tester
          sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
          cat mo.yml
          echo "============================="
          
          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/head/test/distributed/cases -e optimistic 2>&1
      - name: Dump mo-service-new goroutines
        if: ${{ always() && !cancelled() }}
        run: |
          max_retry=5
          retry=0
          while [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; do
            curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/workspace/new-dump-stacks${retry}.log
            pkill -9 mo-service
            retry=$((retry+1))
            if [ ${retry} -ge ${max_retry} ]; then
              echo 'after retry, still cannot shutdown mo-service'
              exit 1
            fi
            sleep 2
          done
      - name: generate upload files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          mkdir -p ${{ github.workspace }}/upload
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib
          mv ${{ github.workspace }}/workspace ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/mo-tester ${{ github.workspace }}/upload/
      # - uses: actions/upload-artifact@v3
      #   if: ${{ failure() || cancelled()}}
      #   continue-on-error: true
      #   with:
      #     name: multi-cn-e2e-linux-x86-reports-${{ env.release }}
      #     path: |
      #       ${{ github.workspace }}/upload
      #     retention-days: 7
          
  upgrade-oldrelease-linux-x86:
    runs-on: ubuntu-latest
    name: Compatibility Test on Linux/x64(LAUNCH) oldrelease
    timeout-minutes: 90

    steps:
      - name: checkout head
        uses: actions/checkout@v3
        with:
          fetch-depth: '3'
          path: ./head
          repository: matrixorigin/matrixone
          ref: main

      - name: checkout release ${{ env.oldrelease }}
        uses: actions/checkout@v3
        with:
          fetch-depth: '3'
          path: ./release
          repository: matrixorigin/matrixone
          ref: ${{ env.oldrelease }}

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne for head
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make build
          git rev-parse --short HEAD          
      - name: Build MatrixOne for ${{ env.oldrelease }}
        run: |
          cd $GITHUB_WORKSPACE/release && make clean && make build          
          git rev-parse --short HEAD
      - name: Create path for execution
        run: |
          cd $GITHUB_WORKSPACE && mkdir workspace 
      - name: Start the Latest Version of ${{ env.oldrelease }} of MO
        run: |
          cd $GITHUB_WORKSPACE/workspace
          mv $GITHUB_WORKSPACE/release/etc .
          mv $GITHUB_WORKSPACE/release/mo-service .
          mv $GITHUB_WORKSPACE/release/optools .
          
          # Explicitly declare pessimistic mode
          echo "==============cn configuration of upstram=============="
          echo ""  >> ./etc/launch/cn.toml
          echo '[cn.txn]' >> ./etc/launch/cn.toml
          echo 'mode = "Pessimistic"' >> ./etc/launch/cn.toml
          echo "==============dn configuration of upstram=============="
          echo ""  >> ./etc/launch/tn.toml
          echo '[dn.txn]' >> ./etc/launch/tn.toml
          echo 'mode = "Pessimistic"' >> ./etc/launch/tn.toml
          cat ./etc/launch/tn.toml     
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/workspace launch
      - name: Clone test-tool repository
        uses: actions/checkout@v3
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      # - name: Start BVT Test for MO with the Latest Version of ${{ env.oldrelease }}
      #   id: bvt_on_latest_oldrelease_version
      #   run: |
      #     export LC_ALL="C.UTF-8"
      #     locale
      #     cd $GITHUB_WORKSPACE/mo-tester
      #     sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
      #     cat mo.yml
      #     echo "============================="
      #     ./run.sh -n -g -o -p $GITHUB_WORKSPACE/release/test/distributed/cases -e optimistic 2>&1
      # - name: Dump mo-service goroutines
      #   if: ${{ always() && !cancelled() }}
      #   run: |
      #     max_retry=5
      #     retry=0
      #     while [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; do
      #       curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/workspace/release-dump-stacks${retry}.log
      #       pkill -9 mo-service
      #       retry=$((retry+1))
      #       if [ ${retry} -ge ${max_retry} ]; then
      #         echo 'after retry, still cannot shutdown mo-service'
      #         exit 1
      #       fi
      #       sleep 2
      #     done
      - name: Start the Version of Head of MO
        run: |
          cd $GITHUB_WORKSPACE/workspace
          mv mo-service mo-service-release
          mv mo-service.log release-mo-service.log
          rm -rf mo-data/etl
          rm -rf etc
          rm -rf optools
          # delete for clear the start finish status of mo
          rm -rf mo-data/local/system_init_completed
          mv $GITHUB_WORKSPACE/head/etc .
          mv $GITHUB_WORKSPACE/head/optools .
          mv $GITHUB_WORKSPACE/head/mo-service .
          echo "==============cn configuration of upstram=============="
          cat ./etc/launch/cn.toml
          echo "==============tn configuration of upstram=============="
          if [[ -f ./etc/launch/dn.toml ]]; then
            cat ./etc/launch/dn.toml     
          else 
            cat ./etc/launch/tn.toml     
          fi
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/workspace launch
      - name: Start BVT Test for MO with Version of Head
        id: bvt_on_latest_head_version
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/mo-tester
          sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
          cat mo.yml
          echo "============================="
          
          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/head/test/distributed/cases -e optimistic 2>&1
      - name: Dump mo-service-new goroutines
        if: ${{ always() && !cancelled() }}
        run: |
          max_retry=5
          retry=0
          while [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; do
            curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/workspace/new-dump-stacks${retry}.log
            pkill -9 mo-service
            retry=$((retry+1))
            if [ ${retry} -ge ${max_retry} ]; then
              echo 'after retry, still cannot shutdown mo-service'
              exit 1
            fi
            sleep 2
          done
      - name: generate upload files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          mkdir -p ${{ github.workspace }}/upload
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib
          mv ${{ github.workspace }}/workspace ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/mo-tester ${{ github.workspace }}/upload/
      # - uses: actions/upload-artifact@v3
      #   if: ${{ failure() || cancelled()}}
      #   continue-on-error: true
      #   with:
      #     name: multi-cn-e2e-linux-x86-reports-${{ env.oldrelease }}
      #     path: |
      #       ${{ github.workspace }}/upload
      #     retention-days: 7
